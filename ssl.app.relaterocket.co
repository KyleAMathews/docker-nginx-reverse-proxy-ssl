# Choose between www and non-www, listen on the *wrong* one and redirect to
# the right one -- http://wiki.nginx.org/Pitfalls#Server_Name
#
server {
  listen [::]:80;
  listen 80;

  # listen on both hosts
  server_name app.relaterocket.co www.app.relaterocket.co;

  include /etc/nginx/h5bp/directive-only/ssl.conf;

  # and redirect to the https host (declared below)
  # avoiding http://www -> https://www -> https:// chain.
  return 301 https://app.relaterocket.co$request_uri;
}

server {
  listen [::]:443 ssl spdy;
  listen 443 ssl spdy;

  # listen on the wrong host
  server_name www.app.relaterocket.co;

  include /etc/nginx/h5bp/directive-only/ssl.conf;

  # and redirect to the non-www host (declared below)
  return 301 https://app.relaterocket.co$request_uri;
}

server {
  listen [::]:443 ssl spdy;
  listen 443 ssl spdy;

  error_log /proc/self/fd/2;
  access_log /proc/self/fd/1;

  # The host name to respond to
  server_name app.relaterocket.co;

  include /etc/nginx/h5bp/directive-only/ssl.conf;

  #Specify a charset
  charset utf-8;

  # Include the basic h5bp config set
  include /etc/nginx/h5bp/basic.conf;

  location / {

    proxy_set_header        Host $host;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;

    # Fix the â€œIt appears that your reverse proxy set up is broken" error.
    proxy_pass          http://localhost:8081;
    proxy_read_timeout  90;

    proxy_redirect      http://localhost:8081 https://app.relaterocket.co;
  }
}
